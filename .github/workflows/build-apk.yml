name: Build and Release APK

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up FVM
        run: |
          curl -fsSL https://raw.githubusercontent.com/leoafarias/fvm/main/install.sh | bash
          echo 'export PATH="$HOME/.pub-cache/bin:$PATH"' >> $GITHUB_ENV

      - name: Install Flutter
        run: fvm install

      - name: Use Flutter version with FVM
        run: fvm use

      - name: Install dependencies
        run: fvm flutter pub get

      - name: Build APK
        run: fvm flutter build apk --release

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app-release.apk
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release for ${{ github.ref }}.
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive